"use strict";(self.webpackChunkOPS445=self.webpackChunkOPS445||[]).push([[923],{3905:function(e,t,n){n.d(t,{Zo:function(){return u},kt:function(){return d}});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function l(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?l(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},l=Object.keys(e);for(r=0;r<l.length;r++)n=l[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(r=0;r<l.length;r++)n=l[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var s=r.createContext({}),p=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},u=function(e){var t=p(e.components);return r.createElement(s.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,l=e.originalType,s=e.parentName,u=i(e,["components","mdxType","originalType","parentName"]),m=p(n),d=a,k=m["".concat(s,".").concat(d)]||m[d]||c[d]||l;return n?r.createElement(k,o(o({ref:t},u),{},{components:n})):r.createElement(k,o({ref:t},u))}));function d(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var l=n.length,o=new Array(l);o[0]=m;var i={};for(var s in t)hasOwnProperty.call(t,s)&&(i[s]=t[s]);i.originalType=e,i.mdxType="string"==typeof e?e:a,o[1]=i;for(var p=2;p<l;p++)o[p]=n[p];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},5015:function(e,t,n){n.r(t),n.d(t,{assets:function(){return s},contentTitle:function(){return o},default:function(){return c},frontMatter:function(){return l},metadata:function(){return i},toc:function(){return p}});var r=n(3117),a=(n(7294),n(3905));const l={id:"reference-sheet",title:"Reference Sheet",sidebar_position:5,description:"Reference Sheet For Acceptable Code For Assessments"},o="OPS445 Reference Sheet For Assessments",i={unversionedId:"C-ExtraResources/reference-sheet",id:"C-ExtraResources/reference-sheet",title:"Reference Sheet",description:"Reference Sheet For Acceptable Code For Assessments",source:"@site/docs/C-ExtraResources/reference.md",sourceDirName:"C-ExtraResources",slug:"/C-ExtraResources/reference-sheet",permalink:"/OPS445/C-ExtraResources/reference-sheet",draft:!1,editUrl:"https://github.com/Seneca-ICTOER/OPS445/tree/main/docs/C-ExtraResources/reference.md",tags:[],version:"current",sidebarPosition:5,frontMatter:{id:"reference-sheet",title:"Reference Sheet",sidebar_position:5,description:"Reference Sheet For Acceptable Code For Assessments"},sidebar:"courseNotesSidebar",previous:{title:"Using Codespaces",permalink:"/OPS445/C-ExtraResources/codespaces"}},s={},p=[{value:"First Quiz",id:"first-quiz",level:2},{value:"Built-in Functions",id:"built-in-functions",level:3},{value:"Conditions",id:"conditions",level:3},{value:"Loops",id:"loops",level:3},{value:"Command Line Arguments",id:"command-line-arguments",level:3},{value:"Import Keywords",id:"import-keywords",level:3},{value:"Comparison Operators",id:"comparison-operators",level:3},{value:"Logical Operators",id:"logical-operators",level:3},{value:"Math Operators",id:"math-operators",level:3},{value:"Boolean Keywords",id:"boolean-keywords",level:3},{value:"Second Quiz",id:"second-quiz",level:2}],u={toc:p};function c(e){let{components:t,...n}=e;return(0,a.kt)("wrapper",(0,r.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"ops445-reference-sheet-for-assessments"},"OPS445 Reference Sheet For Assessments"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("em",{parentName:"li"},"Note"),": words in (these) indicate a thing you will have to write, the parentheses are ",(0,a.kt)("strong",{parentName:"li"},"not")," part of the syntax."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("em",{parentName:"li"},"Note"),": variable placeholders will use ",(0,a.kt)("strong",{parentName:"li"},"x"),", ",(0,a.kt)("strong",{parentName:"li"},"y"),", and so on.")),(0,a.kt)("h2",{id:"first-quiz"},"First Quiz"),(0,a.kt)("h3",{id:"built-in-functions"},"Built-in Functions"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"help()")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"type()")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"print()")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"input()")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"int()")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"str()")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"float()")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"len()"))),(0,a.kt)("h3",{id:"conditions"},"Conditions"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-python"},"if (condition):\n    (action1);\nelif (condition2):\n    (action2);\nelse:\n    (action);\n")),(0,a.kt)("h3",{id:"loops"},"Loops"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-python"},"while (condition1):\n    (action);\n    if (condition2):\n        break\n")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-python"},"for x in y:\n    (action)\n")),(0,a.kt)("h3",{id:"command-line-arguments"},"Command Line Arguments"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-python"},"import sys\n\nsys.argv\n")),(0,a.kt)("h3",{id:"import-keywords"},"Import Keywords"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"from (module) import (something)")),(0,a.kt)("li",{parentName:"ul"},"`import (module) as (alias)")),(0,a.kt)("h3",{id:"comparison-operators"},"Comparison Operators"),(0,a.kt)("table",null,(0,a.kt)("thead",{parentName:"table"},(0,a.kt)("tr",{parentName:"thead"},(0,a.kt)("th",{parentName:"tr",align:null},"Col 1"),(0,a.kt)("th",{parentName:"tr",align:null},"Col 2"))),(0,a.kt)("tbody",{parentName:"table"},(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"<"),(0,a.kt)("td",{parentName:"tr",align:null},">")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"<","="),(0,a.kt)("td",{parentName:"tr",align:null},">","=")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"=="),(0,a.kt)("td",{parentName:"tr",align:null},"!=")))),(0,a.kt)("h3",{id:"logical-operators"},"Logical Operators"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"and")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"or")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"not"))),(0,a.kt)("h3",{id:"math-operators"},"Math Operators"),(0,a.kt)("table",null,(0,a.kt)("thead",{parentName:"table"},(0,a.kt)("tr",{parentName:"thead"},(0,a.kt)("th",{parentName:"tr",align:null},"Col 1"),(0,a.kt)("th",{parentName:"tr",align:null},"Col 2"))),(0,a.kt)("tbody",{parentName:"table"},(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"+"),(0,a.kt)("td",{parentName:"tr",align:null},"-")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"*"),(0,a.kt)("td",{parentName:"tr",align:null},"**")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"/"),(0,a.kt)("td",{parentName:"tr",align:null},"//")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"+="),(0,a.kt)("td",{parentName:"tr",align:null},"-=")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"*="),(0,a.kt)("td",{parentName:"tr",align:null},"/=")))),(0,a.kt)("p",null,"%"),(0,a.kt)("h3",{id:"boolean-keywords"},"Boolean Keywords"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"True"),(0,a.kt)("li",{parentName:"ul"},"False"),(0,a.kt)("li",{parentName:"ul"},"None")),(0,a.kt)("h2",{id:"second-quiz"},"Second Quiz"),(0,a.kt)("p",null,"Coming Soon..."))}c.isMDXComponent=!0}}]);